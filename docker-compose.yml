version: '2.4'

services:
  app:
    image: ghcr.io/datamade/bga-pensions:latest
    container_name: bga-pensions
    restart: always
    # Allow container to be attached to, e.g., to access the pdb shell
    stdin_open: true
    tty: true
    ports:
      # Map ports on your computer to ports on your container. This allows you,
      # e.g., to visit your containerized application in a browser on your
      # computer.
      - 8000:8000
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      # Mount the development directory as a volume into the container, so
      # Docker automatically recognizes your changes.
      - .:/app
      # This line allows the image's node_modules to not get overrwriten
      # by what we have locally. if you want to have local changes to
      # node_modules to be reflected, comment out this line
      - /app/node_modules/      
      # Mount example configs as live configs in the container.
      - ${PWD}/bga_database/local_settings.py.example:/app/bga_database/local_settings.py
    command: python manage.py runserver 0.0.0.0:8000


  migration:
    container_name: bga-pensions-migration
    image: bga-pensions:latest
    depends_on:
      # Declaring this dependency ensures that your application image is built
      # before migrations are run, and that your application and migrations can
      # be run from the same image, rather than creating purpose-specific
      # copies.
      - app
    volumes:
      # These should generally be the same as your application volumes.
      - .:/app
      - ${PWD}/bga_database/local_settings.py.example:/app/bga_database/local_settings.py
    command: python manage.py migrate


  postgres:
    container_name: bga-pensions-postgres
    image: postgres:10
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      # The default Postgres image exposes a number of environmental variables
      # that allow you to configure the container's behavior, without writing
      # any additional code. Specify the name of your database, and any other
      # variables, here. https://hub.docker.com/_/postgres/#environment-variables
      - POSTGRES_DB=bga_pensions
      - POSTGRES_HOST_AUTH_METHOD=trust      
    volumes:
      # By default, Postgres instantiates an anonymous volume. Use a named
      # one, so your data persists beyond the life of the container. See this
      # post for a discussion of the pitfalls of Postgres and anonymous
      # volumes: https://linuxhint.com/run_postgresql_docker_compose/
      - bga-pensions-db-data:/var/lib/postgresql/data
    ports:
      - 32001:5432

volumes:
  # Declare your named volume for Postgres.
  bga-pensions-db-data:
